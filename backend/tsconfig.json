{
  "compilerOptions": {
    /* Language and Env Setup */
    "target": "es2020",                  /* Specify ECMAScript target version: "ES3" (default), "ES5", "ES2015", "ES2016", "ES2017", "ES2018", "ES2019", "ES2020", "ES2021", "ES2022", "ESNext". */
    "lib": ["es2020", "dom"],            /* Specify a library of global API's available in the JavaScript runtime. "DOM" is included for Express Request/Response types. */
    "module": "commonjs",                /* Specify module code generation: "None", "CommonJS", "AMD", "System", "UMD", "ES6", "ES2015", "ES2020", "ES2022", "ESNext", "Node16", "NodeNext". */
    "rootDir": "./",                     /* Specify the root folder within your source files. */
    "outDir": "./dist",                  /* Specify an output folder for all emitted files. */
    "esModuleInterop": true,             /* Enable interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "skipLibCheck": true,                /* Skip type checking all .d.ts files. This is useful for large projects with many dependencies. */

    /* Module Resolution */
    "moduleResolution": "node",          /* Specify how modules are resolved. */
    "baseUrl": "./",                     /* Specify the base directory to resolve non-relative module names. */
    "paths": {                           /* Specify a set of entries that re-map imports to lookup locations relative to the 'baseUrl'. */
      "*": ["node_modules/*"]
    },
    "resolveJsonModule": true,           /* Enable importing .json files */
    "allowJs": true,                     /* Allow JavaScript files to be compiled. */
  },
  "include": [
    "**/*.ts"                            /* Include all .ts files in the compilation. */
  ],
  "exclude": [
    "node_modules",                      /* Exclude node_modules from compilation. */
    "dist"                               /* Exclude compiled output from compilation. */
  ]
}
